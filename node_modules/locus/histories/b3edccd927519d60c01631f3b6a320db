trie
exit
trie
trie.children
trie.root
trie.root.children
trie.root.children['a']
trie.root.children['a'].children
trie.root.children['a'].children['r]
trie.root.children['a'].children['r']
trie.root.children['a'].children['r'].children[
trie.root.children['a'].children['r'].children['t']
triue
tree
trie
trie.count
trie
trie.count
trie
trie.children
trie.kroot
trie.root
trie.insert('arts')
trie
trie.root
trie.root.children
trie.root.children['a']
trie.root.children['a'].children['r']
trie.root.children['a'].children['r'].children['t']
trie.root.children['a'].children['r'].children['t'].children
trie.root.children['a']
trie.root.children['a'].letter
exit
trie
trie.root
trie.insert("ray
trie.insert("ray")
trie.root
trie.root.children
trie.root.children.r
trie.root.children.r.children
trie.root.children.r.children.a
trie.root.children.r.children.a.children.y
trie.root.children.r.children.a.children.y.isWord
trie.root
trie.root..children.r
trie.root.children.r
trie
trie.children
trie.root.children
typeof trie.root.children ===typeof {}
trie.insert(word)
trie.root
trie.root.children
trie.root.children.a
typeof trie.root.children.a== typeof {} 
trie.find(ar)
trie.find
trie.find('ar')
trie
trie.hasOwnProperty(data)
trie.hasOwnProperty('data')
trie.find
trie.find('ar')
trie.suggest('a')
trie.suggest()
trie.suggest('ar')
trie.find
trie.find('pi')
exit
trie.find('pi')
trie.find.currentLetter
trie.populate
trie.populate()
trie.count
trie.select("bats")
trie.suggest("bats")
trie.select("bats")
trie
trie.root
trie.root.children
trie.root.children.a
trie.root.children.a.children.
trie.root.children.a.children.r
trie.root.children.a.children.r.children
trie.root.children.a.children.r
trie.select("grape")
trie.node
trie.root
trie.root.children
trie.root.children.g
trie.root.children.g.root.children
trie.root.children.g.children
trie.root.children.g.children.r
trie.root.children.g.children.r.children.a.children.p.children.e
trie.select("able")
trie.select("zoo")
trie.root
trie.root.z.children.o.children.o
trie.root.z.children.o
trie.root.z
trie.root
trie.root.z
trie.root.children
trie.root.children.z
trie.root.children.z.children.o.children.o
trie
trie.insert('al')
trie.suggest
trie.suggest('al')
trie.find
trie.find('n', 'an')
trie.insert('alaska')
trie.suggestions
exit
trie.suggestions
trie.insert('alaska')
trie.suggestions
exit
trie.insert('alaska')
trie.suggestions
trie.suggest('al')
trie.insert('alaska')
trie.insert('alabama')
trie.insert('alibaba')
trie.suggest('al')
trie.find.currentNode.numUsed
currentNode.numUsed
trie.insert('alaska')
trie.insert('alabama')
trie.insert('alphareta')
trie.suggestions
trie.suggest('al')
trie.insert('alaska')
trie.insert('alabama')
trie.insert('alpharetta')
trie.insert('alaska')
trie.suggest('al')
exit
trie.find('al')
trie.fins('alaska')
trie('alberta')
trie.insert('alaska')
trie.insert('albino')
trie.insert('alfons')
trie.insert('alaska'))
trie.insert('alaska')
trie.suggest('al')
exit
trie.insert('alaska')
trie.insert('alberto')
trie.insert('alfred')
trie.suggest('al')
trie.select('art')
trie.node.children.a.children.r.children.t
trie.root.children.a.children.r
trie.root.children.a.children.r.children.t
trie.root.children.a.children.r.children.t.children.i.children.s.children.t
trie
trie.suggest("al")
trie.suggest("alaba")
trie.select('alabastos')
trie.select('alabamide')
trie.select('alabastos')
trie.select('alabamide')
trie.select('alabarch')
trie.suggest('alaba')
trie.insert("bat")
trie.insert("bats")
trie.node
trie.root
trie.root.children.b
trie.root.children.b.children.a
trie.root.children.b.children.a.children.t
trie.root.children.b.children.a.children.t.children.s
trie.select("bat")
trie.root.children.b.children.a.children.t
trie.root.children.b.children.a.children.t.children.s
