trie
exit
trie
trie.children
trie.root
trie.root.children
trie.root.children['a']
trie.root.children['a'].children
trie.root.children['a'].children['r]
trie.root.children['a'].children['r']
trie.root.children['a'].children['r'].children[
trie.root.children['a'].children['r'].children['t']
triue
tree
trie
trie.count
trie
trie.count
trie
trie.children
trie.kroot
trie.root
trie.insert('arts')
trie
trie.root
trie.root.children
trie.root.children['a']
trie.root.children['a'].children['r']
trie.root.children['a'].children['r'].children['t']
trie.root.children['a'].children['r'].children['t'].children
trie.root.children['a']
trie.root.children['a'].letter
exit
trie
trie.root
trie.insert("ray
trie.insert("ray")
trie.root
trie.root.children
trie.root.children.r
trie.root.children.r.children
trie.root.children.r.children.a
trie.root.children.r.children.a.children.y
trie.root.children.r.children.a.children.y.isWord
trie.root
trie.root..children.r
trie.root.children.r
trie
trie.children
trie.root.children
typeof trie.root.children ===typeof {}
trie.insert(word)
trie.root
trie.root.children
trie.root.children.a
typeof trie.root.children.a== typeof {} 
trie.find(ar)
trie.find
trie.find('ar')
trie
trie.hasOwnProperty(data)
trie.hasOwnProperty('data')
trie.find
trie.find('ar')
trie.suggest('a')
trie.suggest()
trie.suggest('ar')
trie.find
trie.find('pi')
exit
trie.find('pi')
trie.find.currentLetter
